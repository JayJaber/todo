{"version":3,"sources":["components/Navbar.js","components/Tasks.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["MyNavbar","tasks","onTasksChange","color","onColorChange","className","style","marginBottom","alignLinks","brand","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","onClick","window","confirm","filter","task","done","cursor","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","trigger","href","right","map","c","role","fontWeight","Tasks","React","useState","input","setInput","invalid","setInvalid","localStorage","getItem","title","setTitle","useEffect","setItem","textAlign","margin","padding","paddingTop","value","label","placeholder","onChange","e","target","width","fontSize","length","marginTop","i","s","m","l","xl","checked","j","borderBottom","paddingBottom","display","alignItems","error","onKeyDown","key","floating","icon","small","node","waves","tooltip","MyFooter","src","height","alt","App","JSON","parse","setTasks","setColor","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06eb6b93.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Icon, NavItem, Dropdown }  from 'react-materialize';\n\nexport default function MyNavbar ({tasks, onTasksChange, color, onColorChange,}) {\n\n  const colors = ['red', 'pink', 'purple', 'deep-purple', 'indigo', 'blue', 'light-blue', 'cyan', 'teal', 'green', 'light-green', 'lime', 'yellow', 'amber', 'orange', 'deep-orange', 'brown', 'grey', 'blue-grey'];\n\n  return (\n    <Navbar\n    className={color + ' navbar'}\n    style={{marginBottom: '1em'}}\n    alignLinks=\"right\"\n    brand={<a className=\"brand-logo\">&nbsp;Task&nbsp;Manager&nbsp;</a>}     // eslint-disable-line\n    id=\"mobile-nav\"\n    menuIcon={<Icon>settings</Icon>}\n    options={{\n      draggable: true,\n      edge: 'left',\n      inDuration: 250,\n      onCloseEnd: null,\n      onCloseStart: null,\n      onOpenEnd: null,\n      onOpenStart: null,\n      outDuration: 200,\n      preventScrolling: true,\n    }}\n  >\n    {/* Navbar buttons to clear tasks */}\n    <NavItem onClick={() => {if (window.confirm('Are you sure you want to clear completed tasks?')) onTasksChange(tasks.filter(task=>task.done === false))}} style={{cursor: 'pointer'}}>\n      Clear Completed Tasks\n    </NavItem>\n    <NavItem onClick={() => {if (window.confirm('Are you sure you want to clear all tasks?')) onTasksChange([])}} style={{cursor: 'pointer'}}>\n      Clear All Tasks\n    </NavItem>\n    <Dropdown\n      // id=\"Dropdown_14\"\n      options={{\n        alignment: 'left',\n        autoTrigger: true,\n        closeOnClick: true,\n        constrainWidth: true,\n        container: null,\n        coverTrigger: true,\n        hover: false,\n        inDuration: 150,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        outDuration: 250\n      }}\n      trigger={<a href=\"#color\">Select Color{' '}<Icon right>arrow_drop_down</Icon></a>}\n    >\n      {colors.map(c => \n        <a className={c} href={'#' + c} style={{color: 'white'}} role='button' onClick={() => onColorChange(c)}>{c}{color===c? <span style={{fontWeight: 700}}>&nbsp;Selected</span>: ''}</a>\n      )}\n    </Dropdown>\n    {/* <NavItem>\n      <TextInput style={{color: 1}} placeholder={name} onBlur={e=>onNameChange(e.target.value)}></TextInput>\n    </NavItem> */}\n  </Navbar>\n  );\n}","import React from 'react';\nimport { Checkbox, Button, Icon, TextInput, Row, Col } from 'react-materialize';\n\nexport default function Tasks ({tasks, onTasksChange, color}) {\n  const [input, setInput] = React.useState(''); // text input\n  const [invalid, setInvalid] = React.useState(''); // for displaying if invalid input\n\n  const [title, setTitle] = React.useState(localStorage.getItem('title') || 'Todo List');\n\n  React.useEffect(() => { // Setting color in local storage on each change so it persists\n    localStorage.setItem('title', title);\n  }, [title]);\n\n\n  return (\n    <div className={color+' lighten-5'} style={{textAlign: 'center', margin: '1em', padding: '0.5em', paddingTop: '1em'}}>\n      \n      {/* List of tasks */}\n      <TextInput value={title} label='Edit Title' placeholder='Add Title' onChange={e => setTitle(e.target.value)} style={{width: 'calc(100% - 0.9em)', margin: 0, textAlign: 'center', fontSize: 24}}></TextInput>\n      {/* <div class=\"input-field col\">\n      <input value=\"Alvin\" id=\"first_name2\" type=\"text\" class=\"validate\" style={{margin: 0, padding: 0}}/>\n      <label class=\"active\" for=\"first_name2\">First Name</label>\n       </div> */}\n\n      {tasks.length === 0? <h6 style={{padding: '1.27em'}}>No tasks yet, add some below!</h6>\n      : <Row style={{marginBottom: '0', marginTop: 0}}>\n          {/* <Col s={12} m={12}><div  style={{borderBottom: '1px solid rgb(158, 158, 158)', paddingTop: '0.1em', paddingBottom: '0.35em'}}></div></Col> */}\n        {tasks.map((task, i) => \n          <>\n            <Col s={9} m={10} l={10} xl={11} style={{textAlign: 'left', marginTop: (i===0? '0.25em':'1em'), marginBottom: '0.5em'}}>{task.done? <s>{i+1}.&nbsp;{task.value}</s> : <>{i+1}. {task.value}</> }</Col>\n            <Col s={3} m={2} l={2} xl={1} style={{marginTop: (i===0? '0.25em':'1em'), marginBottom: '0.5em', textAlign: 'right'}}><Checkbox label={task.done? 'Done': 'Todo'} checked={task.done} value='done'\n              onClick={e => onTasksChange( tasks.map((task, j) => { if(i ===j)return {...task, done: e.target.checked}; return task;}))}></Checkbox></Col>\n            <Col s={12} m={12}><div  style={{borderBottom: '1px solid rgb(158, 158, 158)', paddingTop: '0.05em', paddingBottom: '0.2em'}}></div></Col>\n          </>\n        )}\n      </Row>\n      }\n\n      {/* Input to add new task */}\n      <Row style={{display: 'flex', alignItems: 'center'}}>\n        <TextInput s={10} m={11} l={11} xl={11}\n          className={invalid + ' input-field'}\n          label=\"New task\"\n          error=\"Tasks cannot be blank\"\n          value={input}\n          onChange={e => {setInput(e.target.value); setInvalid('')}}\n          style={{fontSize: '200'}}\n          onKeyDown={(e) => { if (input && e.key==='Enter') { onTasksChange([...tasks, {value: input, done: false}]); setInput(''); } else if(e.key===\"Enter\") setInvalid('invalid')}}\n        />\n        <Col s={2} m={1} l={1} xl={1}> \n        <Button\n          className={color + ' add-task'}\n          floating\n          icon={<Icon>add</Icon>}\n          small\n          node=\"button\"\n          waves=\"light\"\n          tooltip=\"Add task\"\n          onClick={() => {\n            if (input) { onTasksChange([...tasks, {value: input, done: false}]); setInput(''); } else setInvalid('invalid');\n          }}\n        />\n        </Col>\n      </Row>\n    </div>\n  );\n}","import { Icon, Row, Col } from 'react-materialize';\n\nexport default function MyFooter (color) {\n  return (\n    <div className={'footer '+color} style={{padding: '0.5em', textAlign: 'center', paddingBottom: 'calc(0.5em - 4px)'}}>\n      <Row style={{margin: 0}}>\n        <Col s={6} m={6}>\n          <p className=\"grey-text text-lighten-3\">&copy; 2021 Jay Jaber</p>\n        </Col>\n        {/* Links */}\n        <Col s={2} m={2}>\n          <p className=\"grey-text text-lighten-3\" >\n            <a className=\"grey-text text-lighten-3\" href=\"https://github.com/JayJaber\"><img src='./GitHub.png' style={{height: 12}} alt='GitHub'/></a>\n          </p>\n        </Col>\n        <Col s={2} m={2}>\n          <p className=\"grey-text text-lighten-3\" style={{paddingTop: 1}}>\n            <a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/jay-jaber-7439bb1b3/\"><img src='./Linkedin.svg' alt='Linkedin' style={{height: 16}}/></a>\n          </p>\n        </Col>\n        <Col s={2} m={2}>\n          <p className=\"grey-text text-lighten-3\">\n            <a className=\"grey-text text-lighten-3\" href=\"mailto:calijayjaber@gmail.com\"><Icon style={{fontSize: 18}}>mail</Icon></a>\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n}","import React from 'react';\nimport 'materialize-css';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css'\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Tasks from './components/Tasks';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [tasks, setTasks] = React.useState(JSON.parse(localStorage.getItem('tasks')) || []); // if tasks were previously saved, retriving them\n  const [color, setColor] = React.useState(localStorage.getItem('color') || 'teal'); // if tasks were previously saved, retriving them\n\n  React.useEffect(() => {\n    setColor('teal');\n  }, []);\n\n  React.useEffect(() => { // Setting tasks in local storage on each change so they persist\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  React.useEffect(() => { // Setting color in local storage on each change so it persists\n    localStorage.setItem('color', color);\n  }, [color]);\n\n  return (\n    <div className={'App '+color}>\n      <main className={color+' lighten-4'}>\n        <Navbar tasks={tasks} onTasksChange={setTasks} color={color} onColorChange={setColor}/>\n        <Tasks tasks={tasks} onTasksChange={setTasks} color={color}/>\n      </main>\n      <Footer className='footer' color={color}/>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}